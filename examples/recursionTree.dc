// Start Line
x1=300;
y1=500;
x2=300;
y2=300;
counter=0;
base=line(x1,y1,x2,y2);
weight(base,2);

// Main Area
// Create Tree.
// Recursively call drawMidpoint. 
/*
while (counter<4) :
    base=drawMidpoint(x1,y1,x2,y2,counter);
end    
*/

// Recursive function to draw children
//
// find midpoint of line, create two outwward lines
//   PARAM: coordinates parent edge points
//   RETURN: coordinates of leftchild, rightchild parents
def drawMidpoint(px1,py1,px2,py2,counter):
    //find midpoint of parent line
    midx=(px2-px1)/2;
    mixy=(py2-py1)/2;
    
    //create two lines based on midpoint-->endpoint
    leftChild = line(midx, midy, px2, py2);
    rightChild = line(midx, midy, px2, py2);
    
    //rotate lines 45 degrees outward
    rotate(leftChild,-45);
    rotateChild(rightChild,45);
    
    //align first point of line with the midpoint of the parent
    
    //updates counter to know the number of recursions
    counter=counter+1;
    
    //MOTHER: [x1,y1,x2,y2,counter];
    //CHILD: [x1,y1,x2,y2,counter];
    //CHILD: [x1,y1,x2,y2,counter];
end






//Example of moving ellipse to a point on a polygon. 
e=ellipse(100,100,100,50);
p=poly(500,500,5,50);
//move(e,p[0]);



//LINE ROTATION IS NOT WORKING. 
testLine=line(200,200,100,100);
rotate(testLine,10);
move(testLine,300,400);